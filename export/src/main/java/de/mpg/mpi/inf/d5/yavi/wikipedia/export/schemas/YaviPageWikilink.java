/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class YaviPageWikilink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6375729425667632803L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"YaviPageWikilink\",\"namespace\":\"de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas\",\"fields\":[{\"name\":\"page_id\",\"type\":[\"null\",\"long\"]},{\"name\":\"wikilink\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Long page_id;
  @Deprecated public java.lang.CharSequence wikilink;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public YaviPageWikilink() {}

  /**
   * All-args constructor.
   * @param page_id The new value for page_id
   * @param wikilink The new value for wikilink
   */
  public YaviPageWikilink(java.lang.Long page_id, java.lang.CharSequence wikilink) {
    this.page_id = page_id;
    this.wikilink = wikilink;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return page_id;
    case 1: return wikilink;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: page_id = (java.lang.Long)value$; break;
    case 1: wikilink = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'page_id' field.
   * @return The value of the 'page_id' field.
   */
  public java.lang.Long getPageId() {
    return page_id;
  }

  /**
   * Sets the value of the 'page_id' field.
   * @param value the value to set.
   */
  public void setPageId(java.lang.Long value) {
    this.page_id = value;
  }

  /**
   * Gets the value of the 'wikilink' field.
   * @return The value of the 'wikilink' field.
   */
  public java.lang.CharSequence getWikilink() {
    return wikilink;
  }

  /**
   * Sets the value of the 'wikilink' field.
   * @param value the value to set.
   */
  public void setWikilink(java.lang.CharSequence value) {
    this.wikilink = value;
  }

  /**
   * Creates a new YaviPageWikilink RecordBuilder.
   * @return A new YaviPageWikilink RecordBuilder
   */
  public static de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder newBuilder() {
    return new de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder();
  }

  /**
   * Creates a new YaviPageWikilink RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new YaviPageWikilink RecordBuilder
   */
  public static de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder newBuilder(de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder other) {
    return new de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder(other);
  }

  /**
   * Creates a new YaviPageWikilink RecordBuilder by copying an existing YaviPageWikilink instance.
   * @param other The existing instance to copy.
   * @return A new YaviPageWikilink RecordBuilder
   */
  public static de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder newBuilder(de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink other) {
    return new de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder(other);
  }

  /**
   * RecordBuilder for YaviPageWikilink instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<YaviPageWikilink>
    implements org.apache.avro.data.RecordBuilder<YaviPageWikilink> {

    private java.lang.Long page_id;
    private java.lang.CharSequence wikilink;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.page_id)) {
        this.page_id = data().deepCopy(fields()[0].schema(), other.page_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wikilink)) {
        this.wikilink = data().deepCopy(fields()[1].schema(), other.wikilink);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing YaviPageWikilink instance
     * @param other The existing instance to copy.
     */
    private Builder(de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.page_id)) {
        this.page_id = data().deepCopy(fields()[0].schema(), other.page_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wikilink)) {
        this.wikilink = data().deepCopy(fields()[1].schema(), other.wikilink);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'page_id' field.
      * @return The value.
      */
    public java.lang.Long getPageId() {
      return page_id;
    }

    /**
      * Sets the value of the 'page_id' field.
      * @param value The value of 'page_id'.
      * @return This builder.
      */
    public de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder setPageId(java.lang.Long value) {
      validate(fields()[0], value);
      this.page_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'page_id' field has been set.
      * @return True if the 'page_id' field has been set, false otherwise.
      */
    public boolean hasPageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'page_id' field.
      * @return This builder.
      */
    public de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder clearPageId() {
      page_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'wikilink' field.
      * @return The value.
      */
    public java.lang.CharSequence getWikilink() {
      return wikilink;
    }

    /**
      * Sets the value of the 'wikilink' field.
      * @param value The value of 'wikilink'.
      * @return This builder.
      */
    public de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder setWikilink(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.wikilink = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'wikilink' field has been set.
      * @return True if the 'wikilink' field has been set, false otherwise.
      */
    public boolean hasWikilink() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'wikilink' field.
      * @return This builder.
      */
    public de.mpg.mpi.inf.d5.yavi.wikipedia.export.schemas.YaviPageWikilink.Builder clearWikilink() {
      wikilink = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public YaviPageWikilink build() {
      try {
        YaviPageWikilink record = new YaviPageWikilink();
        record.page_id = fieldSetFlags()[0] ? this.page_id : (java.lang.Long) defaultValue(fields()[0]);
        record.wikilink = fieldSetFlags()[1] ? this.wikilink : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
